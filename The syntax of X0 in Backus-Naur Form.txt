program = "main" "{" declaration_list statement_list "}".
declaration_list = declaration_list declaration_stat | declaration_stat | ε.
declaration_stat = var_declaration | const_declaration.
var_declaration = type ident_list ";".
const_declaration = "const" type ident_list ";".
ident_list = ident_list "," ident_def | ident_def.
ident_def = IDENT | IDENT "=" simple_expr.
type = "int" | "char" | "bool" | "string".
compound_stat = "{" statement_list "}".
statement_list = statement_list statement | statement | ε.
statement = expression_stat | compound_stat | select_stat | iteration_stat | read_stat | write_stat | ε.
expression_stat = expression_stat expression ";" | expression ";" | ε. 
expression = var "=" expression | simple_expr | ε.
var = ID.
select_stat = if_stat.
if_stat = "if" "(" expression ")" statement | "if" "(" expression ")" statement "else" statement. 
iteration_stat = for_stat | while_stat | do_while_stat.
for_stat = "for" "(" expression ";" expression ";" expression ")" statement.
while_stat = "while" "(" expression ")" statement.
do_while_stat = "do" statement "while" "(" expression ")" ";".
read_stat = "read" "(" read_list ")" ";".
read_list = read_list "," read_var | read_var.
read_var = var.
write_stat = "write" "(" write_list ")" ";" .
write_list = write_list "," simple_expr | simple_expr.
simple_expr = factor | "-" simple_expr | unary_opr simple_expr | simple_expr unary_opr | simple_expr opr simple_expr | "!" simple_expr | "(" simple_expr ")".
factor = NUMBER | BOOL | STRING | CHAR | var.
unary_opr = "++" | "--".
opr = "+" | "-" | "*" | "/" | "%" | "&&" | "||" | "^" | "<" | "<=" | ">" | ">=" | "==" | "!=".
